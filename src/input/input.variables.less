@import (reference) '../global/variables.less';

#platui {
    #Input {
        #dependencies {
            #platui > #variables;
            @border-color: @neutral-color;
            @border-bottom-width: 2px;
            @outline-border-width: 1px;
        }

        #platui > #Input > #dependencies;

    /// ============== Input Colors =============== ///

        @text-color: @default-font-color;
        @background-color: @transparent;
        @placeholder-color: @neutral-color;

    /// =============== Input Sizes =============== ///

        @height: 2.5em;
        @width: 18em;
        @border-bottom: @border-bottom-width solid @border-color;
        @outline-border: @outline-border-width solid @border-color;
        @outline-border-radius: @global-border-radius;

    /// =========== Variable Input Styles =========== ///

        .plat-input(@prop; @value) {
            #platui > #mixins;

            & when (@prop = border-color) {
                &.plat-input {
                    .plat-input-container {
                        .plat-input-action {
                            color: darken(@value, 25%);;
                        }
                    }

                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom-color: @value;

                                &:focus {
                                    border-bottom-color: darken(@value, 25%);;
                                }
                            }
                        }
                    }

                /// ============== Secondary Input =============== ///

                    &.input-outline {
                        .plat-input-container {
                            input {
                                border-color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-bottom-width) {
                &.plat-input {
                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom-width: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-bottom) {
                &.plat-input {
                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border-width) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                border-width: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                border: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border-radius) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                .border-radius(@value);
                            }
                        }
                    }
                }
            }
            & when (@prop = text-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                            color: @value;
                        }
                    }
                }
            }
            & when (@prop = background-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = placeholder-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                /// =========== Placeholder Styling =========== ///

                            &::-webkit-input-placeholder {
                                color: @value;
                            }

                            &::-moz-input-placeholder {
                                color: @value;
                            }

                            &:-moz-input-placeholder {
                                color: @value;
                            }

                            &:-ms-input-placeholder {
                                color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = height) {
                &.plat-input {
                    height: @value;

                    .plat-input-container {
                        .plat-input-action {
                            height: @value;
                            line-height: @value;
                        }
                    }
                }
            }
            & when (@prop = width) {
                &.plat-input {
                    width: @value;
                }
            }
        }
    }

    #controls {
        /// =========== Variable Input Styles =========== ///

        .plat-input(@prop: undefined; @value: undefined) {
            #platui > #mixins;

            & when (@prop = undefined), (@value = undefined) {
                @border-color-accent: darken(@border-color, 25%);

                &.plat-input {
                    width: @width;
                    height: @height;

                    .plat-input-container {
                        input {
                            background-color: @background-color;
                            color: @text-color;

                /// =========== Placeholder Styling =========== ///

                            &::-webkit-input-placeholder {
                                color: @placeholder-color;
                            }

                            &::-moz-input-placeholder {
                                color: @placeholder-color;
                            }

                            &:-moz-input-placeholder {
                                color: @placeholder-color;
                            }

                            &:-ms-input-placeholder {
                                color: @placeholder-color;
                            }
                        }

                /// =============== Input Icon =============== ///

                        .plat-input-action {
                            height: @height;
                            line-height: @height;
                            color: @border-color-accent;
                        }
                    }

                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom: @border-bottom;

                                &:focus {
                                    border-color: @border-color-accent;
                                }
                            }
                        }
                    }

                /// ============== Secondary Input =============== ///

                    &.input-outline {
                        .plat-input-container {
                            input {
                                .border-radius(@outline-border-radius);
                                border: @outline-border;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-color) {
                &.plat-input {
                    .plat-input-container {
                        .plat-input-action {
                            color: darken(@value, 25%);;
                        }
                    }

                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom-color: @value;

                                &:focus {
                                    border-bottom-color: darken(@value, 25%);;
                                }
                            }
                        }
                    }

                /// ============== Secondary Input =============== ///

                    &.input-outline {
                        .plat-input-container {
                            input {
                                border-color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-bottom-width) {
                &.plat-input {
                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom-width: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-bottom) {
                &.plat-input {
                    &:not(.input-outline) {
                        .plat-input-container {
                            input {
                                border-bottom: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border-width) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                border-width: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                border: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = outline-border-radius) {
                &.plat-input {
                    &.input-outline {
                        .plat-input-container {
                            input {
                                .border-radius(@value);
                            }
                        }
                    }
                }
            }
            & when (@prop = text-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                            color: @value;
                        }
                    }
                }
            }
            & when (@prop = background-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = placeholder-color) {
                &.plat-input {
                    .plat-input-container {
                        input {
                /// =========== Placeholder Styling =========== ///

                            &::-webkit-input-placeholder {
                                color: @value;
                            }

                            &::-moz-input-placeholder {
                                color: @value;
                            }

                            &:-moz-input-placeholder {
                                color: @value;
                            }

                            &:-ms-input-placeholder {
                                color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = height) {
                &.plat-input {
                    height: @value;

                    .plat-input-container {
                        .plat-input-action {
                            height: @value;
                            line-height: @value;
                        }
                    }
                }
            }
            & when (@prop = width) {
                &.plat-input {
                    width: @value;
                }
            }
        }
    }
}
