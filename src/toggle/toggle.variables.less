@import (reference) '../global/variables.less';

#platui {
    #Toggle {
        #dependencies {
            #platui > #variables;
            @color-off: @neutral-color-light;
            @color-on: @success-color;
        }

        #platui > #Toggle > #dependencies;

    /// =========== Toggle Colors =========== ///

        @background-color-off: @color-off;
        @border-color-off: darken(@color-off, 3%);
        @background-color-on: @color-on;
        @border-color-on: darken(@color-on, 5%);
        @toggle-thin-color-off: @neutral-color-dark;

    /// ============ Toggle Size ============ ///

        @width: 3.25em;
        @ratio: 1/2;
        @toggle-thin-ratio: 1/4;
        @toggle-thin-knob-ratio: 1/2;

    /// ============= Toggle Transition ============= ///

        @transition-time: 250ms;

    /// ========== Variable Toggle Style =========== ///

        .plat-toggle(@prop: undefined; @value: undefined) {
            #platui > #mixins;

            & when (@prop = undefined), (@value = undefined) {
                @height: @width * @ratio;
                @toggle-thin-height: @width * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: (@width * @toggle-thin-knob-ratio) / 2;

                &.plat-toggle {
                    .plat-toggle-container {
                        .border-radius(@height);
                        .transition(~'background-color @{transition-time}, border-color @{transition-time}');
                        width: @width;
                        height: @height;
                        background-color: @background-color-off;
                        border-color: @border-color-off;

                        .plat-knob {
                            .transition-duration(@transition-time);
                            height: @height;
                            width: @height;
                        }

                        &.plat-slide {
                            border-color: @border-color-on;
                            background-color: @background-color-on;

                            .plat-knob {
                                left: @width - @height;
                            }
                        }
                    }

                    &.toggle-thin {
                        .plat-toggle-container {
                            height: @toggle-thin-height;
                            background-color: @toggle-thin-color-off;

                            .plat-knob {
                                top: @half-thin-height - @toggle-thin-knob-radius;
                            }

                            &.plat-slide {
                                background-color: @background-color-on;
                            }
                        }
                    }
                }
            }
            & when (@prop = color-off) {
                &.plat-toggle {
                    .plat-toggle-container {
                        background-color: @value;
                        border-color: darken(@value, 3%);
                    }
                }
            }
            & when (@prop = color-on) {
                &.plat-toggle {
                    .plat-toggle-container {
                        &.plat-slide {
                            border-color: darken(@value, 5%);
                            background-color: @value;
                        }
                    }

                    &.toggle-thin {
                        .plat-toggle-container {
                            &.plat-slide {
                                background-color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = background-color-off) {
                &.plat-toggle {
                    .plat-toggle-container {
                        background-color: @value;
                    }
                }
            }
            & when (@prop = border-color-off) {
                &.plat-toggle {
                    .plat-toggle-container {
                        border-color: @value;
                    }
                }
            }
            & when (@prop = background-color-on) {
                &.plat-toggle {
                    .plat-toggle-container {
                        &.plat-slide {
                            background-color: @value;
                        }
                    }

                    &.toggle-thin {
                        .plat-toggle-container {
                            &.plat-slide {
                                background-color: @value;
                            }
                        }
                    }
                }
            }
            & when (@prop = border-color-on) {
                &.plat-toggle {
                    .plat-toggle-container {
                        &.plat-slide {
                            border-color: @value;
                        }
                    }
                }
            }
            & when (@prop = toggle-thin-color-off) {
                &.plat-toggle {
                    &.toggle-thin {
                        .plat-toggle-container {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = width) {
                #platui > #Toggle;
                @height: @value * @ratio;
                @toggle-thin-height: @value * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: (@value * @toggle-thin-knob-ratio) / 2;

                &.plat-toggle {
                    .plat-toggle-container {
                        .border-radius(@height);
                        width: @value;
                        height: @height;

                        .plat-knob {
                            height: @height;
                            width: @height;
                        }

                        &.plat-slide {
                            .plat-knob {
                                left: @value - @height;
                            }
                        }
                    }

                    &.toggle-thin {
                        .plat-toggle-container {
                            height: @toggle-thin-height;

                            .plat-knob {
                                top: @half-thin-height - @toggle-thin-knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = ratio) {
                #platui > #Toggle;
                @height: @width * @value;

                &.plat-toggle {
                    .plat-toggle-container {
                        .border-radius(@height);
                        height: @height;

                        .plat-knob {
                            height: @height;
                            width: @height;
                        }

                        &.plat-slide {
                            .plat-knob {
                                left: @width - @height;
                            }
                        }
                    }
                }
            }
            & when (@prop = toggle-thin-ratio) {
                #platui > #Toggle;
                @toggle-thin-height: @width * @value;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: (@width * @toggle-thin-knob-ratio) / 2;

                &.plat-toggle {
                    &.toggle-thin {
                        .plat-toggle-container {
                            height: @toggle-thin-height;

                            .plat-knob {
                                top: @half-thin-height - @toggle-thin-knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = toggle-thin-knob-ratio) {
                #platui > #Toggle;
                @toggle-thin-height: @width * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: (@width * @value) / 2;

                &.plat-toggle {
                    &.toggle-thin {
                        .plat-toggle-container {
                            .plat-knob {
                                top: @half-thin-height - @toggle-thin-knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                &.plat-toggle {
                    .plat-toggle-container {
                        .transition(~'background-color @{value}, border-color @{value}');

                        .plat-knob {
                            .transition-duration(@value);
                        }
                    }
                }
            }
        }
    }
}
