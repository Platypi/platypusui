@import (reference) '../global/variables.less';

#platui {
    #Toggle {
        #dependencies {
            #platui > #variables;
            @inactive-color: lighten(@neutral-color, 10%);
            @active-color: @success-color;
        }

        #platui > #Toggle > #dependencies;

    /// =========== Toggle Colors =========== ///

        @background-color: @inactive-color;
        @border-color: darken(@inactive-color, 3%);
        @toggle-thin-background-color: darken(@neutral-color, 10%);
        @knob-color: @white;

    /// =========== Active Toggle Colors =========== ///

        @active-background-color: @active-color;
        @active-border-color: darken(@active-color, 5%);

    /// ============ Toggle Size ============ ///

        @height: @global-touch-diameter;
        @width-ratio: 2/1;
        @toggle-thin-ratio: 1/2;

    /// ============= Toggle Transition ============= ///

        @transition-time: 250ms;

    /// ========== Variable Toggle Style =========== ///

        .plat-toggle(@prop; @value) {
            #platui > #mixins;

            & when (@prop = inactive-color) {
                .plat-toggle-container {
                    background-color: @value;
                    border-color: darken(@value, 3%);
                }
            }
            & when (@prop = active-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        border-color: darken(@value, 5%);
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = background-color) {
                .plat-toggle-container {
                    background-color: @value;
                }
            }
            & when (@prop = border-color) {
                .plat-toggle-container {
                    border-color: @value;
                }
            }
            & when (@prop = active-background-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = active-border-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        border-color: @value;
                    }
                }
            }
            & when (@prop = toggle-thin-background-color) {
                &.toggle-thin {
                    .plat-toggle-container {
                        background-color: @value;
                    }
                }
            }
            & when (@prop = knob-color) {
                .plat-toggle-container {
                    .plat-knob {
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        .plat-knob {
                            border-color: darken(@value, 15%);
                        }
                    }
                }
            }
            & when (@prop = height) {
                #platui > #Toggle;
                @width: @height * @width-ratio;
                @toggle-thin-height: @height * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: @height / 2;

                .plat-toggle-container {
                    .border-radius(@value);
                    width: @width;
                    height: @value;

                    .plat-knob {
                        height: @value;
                        width: @value;
                    }

                    &.plat-slide {
                        .plat-knob {
                            left: @width - @value;
                        }
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        height: @toggle-thin-height;

                        .plat-knob {
                            top: @half-thin-height - @toggle-thin-knob-radius;
                        }

                        &.plat-slide {
                            .plat-knob {
                                left: (@width - @value) * 1.05;
                            }
                        }
                    }
                }
            }
            & when (@prop = width-ratio) {
                #platui > #Toggle;
                @width: @height * @value;

                .plat-toggle-container {
                    width: @width;

                    &.plat-slide {
                        .plat-knob {
                            left: @width - @height;
                        }
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            .plat-knob {
                                left: (@width - @height) * 1.05;
                            }
                        }
                    }
                }
            }
            & when (@prop = toggle-thin-ratio) {
                #platui > #Toggle;
                @toggle-thin-height: @height * @value;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: @height / 2;

                &.toggle-thin {
                    .plat-toggle-container {
                        height: @toggle-thin-height;

                        .plat-knob {
                            top: @half-thin-height - @toggle-thin-knob-radius;
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                .plat-toggle-container {
                    .transition(~'background-color @{value}, border-color @{value}');

                    .plat-knob {
                        .transition-duration(@value);
                    }
                }
            }
        }
    }

    #controls {
        /// ========== Variable Toggle Style =========== ///

        .plat-toggle(@prop: undefined; @value: undefined) {
            #platui > #mixins;

            & when (@prop = undefined), (@value = undefined) {
                @width: @height * @width-ratio;
                @toggle-thin-height: @height * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: @height / 2;

                .plat-toggle-container {
                    .border-radius(@height);
                    .transition(~'background-color @{transition-time}, border-color @{transition-time}');
                    width: @width;
                    height: @height;
                    background-color: @background-color;
                    border-color: @border-color;

                    .plat-knob {
                        .transition-duration(@transition-time);
                        height: @height;
                        width: @height;
                        background-color: @knob-color;
                    }

                    &.plat-slide {
                        border-color: @active-border-color;
                        background-color: @active-background-color;

                        .plat-knob {
                            left: @width - @height;
                        }
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        height: @toggle-thin-height;
                        background-color: @toggle-thin-background-color;

                        .plat-knob {
                            top: @half-thin-height - @toggle-thin-knob-radius;
                            border-color: darken(@knob-color, 15%);
                        }

                        &.plat-slide {
                            background-color: @active-background-color;

                            .plat-knob {
                                left: (@width - @height) * 1.05;
                            }
                        }
                    }
                }
            }
            & when (@prop = inactive-color) {
                .plat-toggle-container {
                    background-color: @value;
                    border-color: darken(@value, 3%);
                }
            }
            & when (@prop = active-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        border-color: darken(@value, 5%);
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = background-color) {
                .plat-toggle-container {
                    background-color: @value;
                }
            }
            & when (@prop = border-color) {
                .plat-toggle-container {
                    border-color: @value;
                }
            }
            & when (@prop = active-background-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = active-border-color) {
                .plat-toggle-container {
                    &.plat-slide {
                        border-color: @value;
                    }
                }
            }
            & when (@prop = toggle-thin-background-color) {
                &.toggle-thin {
                    .plat-toggle-container {
                        background-color: @value;
                    }
                }
            }
            & when (@prop = knob-color) {
                .plat-toggle-container {
                    .plat-knob {
                        background-color: @value;
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        .plat-knob {
                            border-color: darken(@value, 15%);
                        }
                    }
                }
            }
            & when (@prop = height) {
                #platui > #Toggle;
                @width: @height * @width-ratio;
                @toggle-thin-height: @height * @toggle-thin-ratio;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: @height / 2;

                .plat-toggle-container {
                    .border-radius(@value);
                    width: @width;
                    height: @value;

                    .plat-knob {
                        height: @value;
                        width: @value;
                    }

                    &.plat-slide {
                        .plat-knob {
                            left: @width - @value;
                        }
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        height: @toggle-thin-height;

                        .plat-knob {
                            top: @half-thin-height - @toggle-thin-knob-radius;
                        }

                        &.plat-slide {
                            .plat-knob {
                                left: (@width - @value) * 1.05;
                            }
                        }
                    }
                }
            }
            & when (@prop = width-ratio) {
                #platui > #Toggle;
                @width: @height * @value;

                .plat-toggle-container {
                    width: @width;

                    &.plat-slide {
                        .plat-knob {
                            left: @width - @height;
                        }
                    }
                }

                &.toggle-thin {
                    .plat-toggle-container {
                        &.plat-slide {
                            .plat-knob {
                                left: (@width - @height) * 1.05;
                            }
                        }
                    }
                }
            }
            & when (@prop = toggle-thin-ratio) {
                #platui > #Toggle;
                @toggle-thin-height: @height * @value;
                @half-thin-height: @toggle-thin-height / 2;
                @toggle-thin-knob-radius: @height / 2;

                &.toggle-thin {
                    .plat-toggle-container {
                        height: @toggle-thin-height;

                        .plat-knob {
                            top: @half-thin-height - @toggle-thin-knob-radius;
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                .plat-toggle-container {
                    .transition(~'background-color @{value}, border-color @{value}');

                    .plat-knob {
                        .transition-duration(@value);
                    }
                }
            }
        }
    }
}
