@import (reference) '../global/variables.less';

#platui {
    #Slider {
        #dependencies {
            #platui > #variables;
            @knob-base: @white;
        }

        #platui > #Slider > #dependencies;

    /// ================= Slider Colors ================== ///

        @fill-color: darken(@neutral-color, 10%);
        @empty-color: lighten(@neutral-color, 10%);
        @outline-border-color: lighten(@neutral-color, 10%);

    /// ================= Slider Size ================== ///

        @thickness: 0.5em;
        @border-radius: 4px;
        @outline-border-width: 1px;

    /// ================= Slider Knob Properties ================== ///

        @knob-diameter: @global-touch-diameter;
        @knob-color: @knob-base;
        @knob-border-color: darken(@knob-base, 15%);
        @knob-border-width: 1px;

    /// ============== Slider Transitions =============== ///

        @transition-time: 300ms;

    /// ========== Variable Slider Styles =========== ///

        .plat-slider(@prop; @value) {
            #platui > #mixins;

            & when (@prop = knob-base) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            background-color: @value;
                            border-color: darken(@value, 15%);
                        }
                    }
                }
            }
            & when (@prop = fill-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .box-shadow(inset 0px 1px 1px 0px darken(@value, 10%));
                        background-color: @value;
                    }
                }
            }
            & when (@prop = empty-color) {
                .plat-slider-container {
                    background-color: @value;
                }

                &:not(.slider-outline) {
                    .plat-slider-container {
                        .box-shadow(inset 0px 1px 1px 0px darken(@value, 10%));
                    }
                }
            }
            & when (@prop = outline-border-color) {
                .plat-slider-container {
                    border-color: @value;
                }
            }
            & when (@prop = knob-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = knob-border-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            border-color: @value;
                        }
                    }
                }
            }
            & when (@prop = knob-border-width) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            border-width: @value;
                        }
                    }
                }
            }
            & when (@prop = border-radius) {
                .plat-slider-container {
                    .border-radius(@value);

                    .plat-slider-track {
                        .border-radius(@value);
                    }
                }
            }
            & when (@prop = outline-border-width) {
                .plat-slider-container {
                    border-width: @value;
                }
            }
            & when (@prop = thickness) {
                @half-thickness: @value / 2;

                &.plat-horizontal,
                &.plat-horizontal-reversed {
                    .plat-slider-container {
                        .translate-accelerate(0;-@half-thickness);
                        height: @value;

                        .plat-slider-track {
                            .plat-knob {
                                top: @half-thickness;
                            }
                        }
                    }
                }

                &.plat-vertical,
                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .translate-accelerate(-@half-thickness;0);
                        width: @value;

                        .plat-slider-track {
                            .plat-knob {
                                left: @half-thickness;
                            }
                        }
                    }
                }
            }
            & when (@prop = knob-diameter) {
                @knob-radius: @value / 2;

                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            width: @value;
                            height: @value;
                        }
                    }
                }

                &.plat-horizontal,
                &.plat-horizontal-reversed {
                    height: @value;
                    padding-left: @knob-radius;
                    padding-right: @knob-radius;

                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(0;-@knob-radius);
                            }
                        }
                    }
                }

                &.plat-horizontal {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                right: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-horizontal-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                left: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical,
                &.plat-vertical-reversed {
                    width: @value;
                    padding-top: @knob-radius;
                    padding-bottom: @knob-radius;

                    .plat-slider-container {
                        top: @knob-radius;

                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(-@knob-radius;0);
                            }
                        }
                    }
                }

                &.plat-vertical {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                top: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                bottom: -@knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                &.plat-horizontal,
                &.plat-horizontal-reversed,
                &.plat-vertical,
                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            &.plat-transition-init {
                                .transition-duration(@value);
                            }
                        }
                    }
                }
            }
        }
    }

    #controls {
        /// ========== Variable Slider Styles =========== ///

        .plat-slider(@prop: undefined; @value: undefined) {
            #platui > #mixins;

            & when (@prop = undefined), (@value = undefined) {
                @knob-radius: @knob-diameter / 2;
                @half-thickness: @thickness / 2;

                .plat-slider-container {
                    .border-radius(@border-radius);

                    .plat-slider-track {
                        .box-shadow(inset 0px 1px 1px 0px darken(@fill-color, 10%));
                        .border-radius(@border-radius);
                        background-color: @fill-color;

                        .plat-knob {
                            width: @knob-diameter;
                            height: @knob-diameter;
                            background-color: @knob-color;
                            border-color: @knob-border-color;
                            border-width: @knob-border-width;
                        }
                    }
                }

                &:not(.slider-outline) {
                    .plat-slider-container {
                        .box-shadow(inset 0px 1px 1px 0px darken(@empty-color, 10%));
                        background-color: @empty-color;
                    }
                }

                &.slider-outline {
                    .plat-slider-container {
                        border-width: @outline-border-width;
                        border-color: @outline-border-color;
                    }
                }

            /// ============ Slider Orientations ============= ///

                &.plat-horizontal,
                &.plat-horizontal-reversed {
                    height: @knob-diameter;
                    padding-left: @knob-radius;
                    padding-right: @knob-radius;

                    .plat-slider-container {
                        .translate-accelerate(0;-@half-thickness);
                        height: @thickness;

                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(0;-@knob-radius);
                                top: @half-thickness;
                            }

                            &.plat-transition-init {
                                .transition-duration(@transition-time);
                            }
                        }
                    }
                }

                &.plat-horizontal {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                right: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-horizontal-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                left: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical,
                &.plat-vertical-reversed {
                    width: @knob-diameter;
                    padding-top: @knob-radius;
                    padding-bottom: @knob-radius;

                    .plat-slider-container {
                        .translate-accelerate(-@half-thickness;0);
                        top: @knob-radius;
                        width: @thickness;

                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(-@knob-radius;0);
                                left: @half-thickness;
                            }

                            &.plat-transition-init {
                                .transition-duration(@transition-time);
                            }
                        }
                    }
                }

                &.plat-vertical {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                top: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                bottom: -@knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = knob-base) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            background-color: @value;
                            border-color: darken(@value, 15%);
                        }
                    }
                }
            }
            & when (@prop = fill-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .box-shadow(inset 0px 1px 1px 0px darken(@value, 10%));
                        background-color: @value;
                    }
                }
            }
            & when (@prop = empty-color) {
                .plat-slider-container {
                    background-color: @value;
                }

                &:not(.slider-outline) {
                    .plat-slider-container {
                        .box-shadow(inset 0px 1px 1px 0px darken(@value, 10%));
                    }
                }
            }
            & when (@prop = outline-border-color) {
                .plat-slider-container {
                    border-color: @value;
                }
            }
            & when (@prop = knob-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = knob-border-color) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            border-color: @value;
                        }
                    }
                }
            }
            & when (@prop = knob-border-width) {
                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            border-width: @value;
                        }
                    }
                }
            }
            & when (@prop = border-radius) {
                .plat-slider-container {
                    .border-radius(@value);

                    .plat-slider-track {
                        .border-radius(@value);
                    }
                }
            }
            & when (@prop = outline-border-width) {
                .plat-slider-container {
                    border-width: @value;
                }
            }
            & when (@prop = thickness) {
                @half-thickness: @value / 2;

                &.plat-horizontal,
                &.plat-horizontal-reversed {
                    .plat-slider-container {
                        .translate-accelerate(0;-@half-thickness);
                        height: @value;

                        .plat-slider-track {
                            .plat-knob {
                                top: @half-thickness;
                            }
                        }
                    }
                }

                &.plat-vertical,
                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .translate-accelerate(-@half-thickness;0);
                        width: @value;

                        .plat-slider-track {
                            .plat-knob {
                                left: @half-thickness;
                            }
                        }
                    }
                }
            }
            & when (@prop = knob-diameter) {
                @knob-radius: @value / 2;

                .plat-slider-container {
                    .plat-slider-track {
                        .plat-knob {
                            width: @value;
                            height: @value;
                        }
                    }
                }

                &.plat-horizontal,
                &.plat-horizontal-reversed {
                    height: @value;
                    padding-left: @knob-radius;
                    padding-right: @knob-radius;

                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(0;-@knob-radius);
                            }
                        }
                    }
                }

                &.plat-horizontal {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                right: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-horizontal-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                left: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical,
                &.plat-vertical-reversed {
                    width: @value;
                    padding-top: @knob-radius;
                    padding-bottom: @knob-radius;

                    .plat-slider-container {
                        top: @knob-radius;

                        .plat-slider-track {
                            .plat-knob {
                                .translate-accelerate(-@knob-radius;0);
                            }
                        }
                    }
                }

                &.plat-vertical {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                top: -@knob-radius;
                            }
                        }
                    }
                }

                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            .plat-knob {
                                bottom: -@knob-radius;
                            }
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                &.plat-horizontal,
                &.plat-horizontal-reversed,
                &.plat-vertical,
                &.plat-vertical-reversed {
                    .plat-slider-container {
                        .plat-slider-track {
                            &.plat-transition-init {
                                .transition-duration(@value);
                            }
                        }
                    }
                }
            }
        }
    }
}
