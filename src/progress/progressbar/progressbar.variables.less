@import (reference) '../../global/variables.less';

#platui {
    #ProgressBar {
        #platui > #variables;

    /// =========== Progress Bar Colors =========== ///

        @fill-color: @neutral-color-dark;
        @unfilled-color: @neutral-color-light;

    /// =========== Progress Bar Properties =========== ///

        @height: 8px;
        @border: none;
        @border-radius: 8px;
        @fill-radius: 4px;

    /// =========== Progress Bar Transition =========== ///

        @transition-time: 0s;
        @transition-timing-function: linear;

    /// =========== Variable Progress Bar Styles =========== ///

        .plat-progress(@prop: undefined; @value: undefined) {
            #platui > #mixins;

            & when (@prop = undefined), (@value = undefined) {
                &.plat-progress {
                    .plat-progress-container {
                        .border-radius(@border-radius);
                        height: @height;
                        background-color: @unfilled-color;
                        border: @border;

                        .plat-animated-bar {
                            .border-radius(@fill-radius);
                            background-color: @fill-color;

                            &.plat-transition-init {
                                .transition-duration(@transition-time);
                                .transition-timing-function(@transition-timing-function);
                            }
                        }
                    }
                }
            }
            & when (@prop = fill-color) {
                &.plat-progress {
                    .plat-progress-container {
                        .plat-animated-bar {
                            background-color: @value;
                        }
                    }
                }
            }
            & when (@prop = unfilled-color) {
                &.plat-progress {
                    .plat-progress-container {
                        background-color: @value;
                    }
                }
            }
            & when (@prop = height) {
                &.plat-progress {
                    .plat-progress-container {
                        height: @value;
                    }
                }
            }
            & when (@prop = border) {
                &.plat-progress {
                    .plat-progress-container {
                        border: @value;
                    }
                }
            }
            & when (@prop = border-radius) {
                &.plat-progress {
                    .plat-progress-container {
                        .border-radius(@value);
                    }
                }
            }
            & when (@prop = fill-radius) {
                &.plat-progress {
                    .plat-progress-container {
                        .plat-animated-bar {
                            .border-radius(@value);
                        }
                    }
                }
            }
            & when (@prop = transition-time) {
                &.plat-progress {
                    .plat-progress-container {
                        .plat-animated-bar {
                            &.plat-transition-init {
                                .transition-duration(@value);
                            }
                        }
                    }
                }
            }
            & when (@prop = transition-timing-function) {
                &.plat-progress {
                    .plat-progress-container {
                        .plat-animated-bar {
                            &.plat-transition-init {
                                .transition-timing-function(@value);
                            }
                        }
                    }
                }
            }
        }
    }
}
