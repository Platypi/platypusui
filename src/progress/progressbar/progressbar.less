@import (reference) '../../mixins/helpers.less';
@import (reference) '../../mixins/transforms.less';
@import (reference) '../../mixins/transitions.less';
@import (reference) 'progressbar.variables.less';

/// =========== Progress Bar Declaration =========== ///

& {
    #platui > #variables;
    #platui > #mixins;
    #platui > #ProgressBar;

    .plat-progress {
        width: 100%;
        .box-sizing(border-box);

        .plat-progress-container {
            position: relative;
            height: @height;
            width: 100%;
            background-color: @neutral-color-light;
            overflow: hidden;
            border: @border;
            .border-radius(@height);
            .box-sizing(content-box);
            .box-shadow(inset 0px 1px 1px 0px rgba(0,0,0,0.13));

            .plat-animated-bar {
                background-color: @neutral-color-dark;
                width: 0;
                height: @height;
                .border-radius(@height / 2);
                .box-sizing(content-box);
                .translateZ(0);

                &.plat-transition-init {
                    .transition(width @transition-time linear);
                }
            }
        }

        &.progress-primary {
            .plat-animated-bar {
                background-color: @primary-color;
            }
        }

        &.progress-secondary {
            .plat-animated-bar {
                background-color: @secondary-color;
            }
        }

        &.progress-success {
            .plat-animated-bar {
                background-color: @success-color;
            }
        }

        &.progress-danger {
            .plat-animated-bar {
                background-color: @danger-color;
            }
        }

        &.progress-caution {
            .plat-animated-bar {
                background-color: @caution-color;
            }
        }
    }
}

/// =========== Variable Progress Bar Styles =========== ///

.plat-progress(@prop: undefined; @value: undefined) {
    #platui > #mixins;

    & when (@prop = undefined), (@value = undefined) {
        &.plat-progress {
            .plat-progress-container {
                height: @height;
                border: @border;
                .border-radius(@height);

                .plat-animated-bar {
                    height: @height;
                    .border-radius(@height / 2);

                    &.plat-transition-init {
                        .transition-duration(@transition-time);
                    }
                }
            }
        }
    }
}
