/// Common

@primaryColor: orange;
@secondaryColor: dodgerblue;
@neutralColor: gray;

/// Button
#ButtonVars {
    @buttonBackgroundColor: transparent;
    @buttonColor: black;
    @buttonBorderSize: 1px;
    @buttonBorderColor: black;
    @buttonPrimaryBorderRadius: 2px;
    @buttonSecondaryBorderRadius: 0.5em;
}

/// Toggle
#ToggleVars {
    // set this var to for a custom border color
    @toggleBorderColor: undefined;
    @toggleBackgroundColor: transparent;
    @toggleColor: @neutralColor;
    @toggleActiveColor: @primaryColor;
    @toggleWidth: 4em;
    @toggleRatio: 1/3;
    @toggleHeight: @toggleWidth * @toggleRatio;
    @toggleBorderSize: 1px;
    @toggleActivatedBorderColor: @toggleActiveColor;
    @transitionTime: 250ms;
    @toggleTransitionArgs: left @transitionTime, background-color @transitionTime;
    @knobColor: @toggleColor;
    @knobPadding: 1px;
    .toggleBorderColor(@property) when (@toggleBorderColor = undefined) {
        & when (@toggleBackgroundColor = transparent) {
            @{property}: @toggleColor;
        }
        & when not (@toggleBackgroundColor = transparent) {
            @{property}: @toggleBackgroundColor;
        }
    }
    .toggleBorderColor(@property) when (default()) {
        @{property}: @toggleBorderColor;
    }
}

/// Checkbox
#CheckboxVars {
    // set this var to for a custom secondary checkbox mark color
    @checkboxSecondaryMarkColor: undefined;
    @checkboxBackgroundColor: transparent;
    @checkboxBorderColor: black;
    @checkboxActiveBorderColor: @primaryColor;
    @checkboxMarkColor: @checkboxActiveBorderColor;
    @checkboxSize: 1em;
    @checkboxBorderSize: 1px;
    @checkboxMarkThickness: @checkboxBorderSize;
    .secondaryCheckboxMarkColor(@property) when (@checkboxSecondaryMarkColor = undefined) {
        & when (@checkboxBackgroundColor = transparent) {
            @{property}: white;
        }
        & when not (@checkboxBackgroundColor = transparent) {
            @{property}: @checkboxBackgroundColor;
        }
    }
    .secondaryCheckboxMarkColor(@property) when (default()) {
        @{property}: @checkboxSecondaryMarkColor;
    }
}

/// Radio
#RadioVars {
    @radioBackgroundColor: transparent;
    @radioBorderColor: black;
    @radioActiveBorderColor: @primaryColor;
    @radioMarkColor: @radioActiveBorderColor;
    @radioSize: 1em;
    @radioProportion: 3/5;
    @radioBorderSize: 1px;
}

/// Drawer
#DrawerVars {
    @drawerColor: @neutralColor;
    @drawerLength: 80%;
    @drawerTransition: all 200ms;
}

/// Modal
#ModalVars {
    @modalColor: white;
    @modalBackgroundColor: rgba(0,0,0,0.75);
    @modalWidth: 50%;
    @modalHeight: 50%;
    @modalLeftTransition: right 500ms;
    @modalRightTransition: left 500ms;
    @modalUpTransition: bottom 500ms;
    @modalDownTransition: top 500ms;
    @modalFadeTransition: opacity 500ms;
}

/// Progress Bar
#ProgressBarVars {
    @barBorderColor: @neutralColor;
    @barColor: @primaryColor;
    @barHeight: 1em;
    @barBorderSize: 1px;
    @barTransition: none;
}

/// Progress Ring
#ProgressRingVars {
    @ringColor: @primaryColor;
    @ringDiameter: 3em;
    @ringAnimation: PLAT-SPIN;
    @ringSpinSpeed: 500ms;
    @ringThickness: @ringDiameter / 10;
}
