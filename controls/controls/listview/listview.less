@import (reference) '../global/mixins.less';
@import (reference) 'listview.variables.less';

/// ============= Listview Constants ============= ///

#platui {
    #__Listview {
        .plat-ring-constants(@orientation: vertical) {
            & when (@orientation = vertical) {
                height: 2.5em;
                width: 100%;
            } 
            & when (@orientation = horizontal) {
                height: 100%;
                width: 2.5em;
            }

            .plat-ring {
                height: 2em;
                width: 2em;
                position: absolute;

                & when (@orientation = vertical) {
                    margin-top: 0.25em;
                    margin-bottom: 0.25em;
                    .calc(left, '50% - 1em');
                } 
                & when (@orientation = horizontal) {
                    margin-left: 0.25em;
                    margin-right: 0.25em;
                    .calc(top, '50% - 1em');
                }

                .plat-progress-container {
                    .plat-animated-ring {
                        .border-radius(2em);
                    }
                }
            }
        }
    }
}

/// =========== Listview Default Styles =========== ///

.plat-listview {
    #platui > #mixins;
    #platui > #Listview;
    #platui > #__Listview;
    .fill();
    .box-sizing(border-box);
    position: relative;
    min-height: 50px;
    overflow: hidden;

    .plat-listview-viewport {
        .fill();
        .box-sizing(border-box);
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        overflow: hidden;
        
        .plat-scroll-container {
            .fill();
            .box-sizing(border-box);

            .plat-container {
                .fill();
                .box-sizing(border-box);
            }
        }

        &.plat-manipulation-prep {
            background-color: @manipulated-viewport-background-color;

            .plat-scroll-container {
                overflow: hidden;
            }
        }
            
        &.plat-transition-init {
            .translateZ(0);
            .transition(@refresh-transition);
        }
    }

    .plat-refresh,
    .plat-incremental {
        position: absolute;
        z-index: 0;

        .plat-ring {
            .plat-progress-container {
                .plat-animated-ring {
                    .animation-play-state(paused);
                }
            }
        }

        &.plat-play {
            .plat-ring {
                .plat-progress-container {
                    .plat-animated-ring {
                        .animation-play-state(running);
                    }
                }
            }
        }
    }

    &.plat-vertical {
        .plat-listview-viewport {
            .plat-scroll-container {
                .scroll(y);

                .plat-container {
                    .plat-infinite {
                        .plat-ring-constants();
                        position: relative;
                    }
                }
            }
        }

        .plat-refresh,
        .plat-incremental {
            .plat-ring-constants();
            left: 0;
        }

        .plat-refresh {
            top: 0;
        }

        .plat-incremental {
            bottom: 0;
        }
    }

    &.plat-horizontal {
        .plat-listview-viewport {
            .plat-scroll-container {
                .scroll(x);

                .plat-container {
                    .flexbox();
                    .flex-direction(row);
                    .align-items(stretch);

                    .plat-listview-group {
                        height: 100%;

                        .plat-listview-items {
                            .inline-flexbox();
                            .flex-flow(column wrap);
                            .align-content(flex-start);
                        }
                    }

                    .plat-infinite {
                        position: relative;
                    }
                }
            }
        }

        .plat-refresh,
        .plat-incremental {
            .plat-ring-constants(horizontal);
            top: 0;
        }

        .plat-refresh {
            left: 0;
        }

        .plat-incremental {
            right: 0;
        }
    }

    &.plat-animated {
        .plat-listview-viewport {
            .plat-scroll-container {
                .plat-container {
                    .plat-enter-init {
                        &.plat-item,
                        &.plat-listview-group {
                            .animation(@enter-animation);
                        }
                    }
                }
            }
        }
        
        .plat-listview-viewport {
            .plat-scroll-container {
                .plat-container {
                    .plat-leave {
                        &.plat-item,
                        &.plat-listview-group {
                            .animation(@leave-animation);
                        }
                    }
                }
            }
        }
    }
}

& {
    #platui > #Listview;
    .enter(@enter-animation-name);
    .leave(@leave-animation-name);
}
