@import '../less/variables';

.plat-range {
    #RangeVars;
    position: relative;
    width: 100%;
    height: 100%;
    .box-sizing(border-box);
    
    @knobRadius: @knobSize / 2;
    .plat-range-container {
        @rangeLength: ~'calc(100% - @{knobSize})';
        position: absolute;
        width: @rangeLength;
        height: @rangeLength;
        background-color: @rangeBackgroundColor;
        overflow: visible;

        .slider {
            position: absolute;
            background-color: @rangeFillColor;
            overflow: visible;

            .knob {
                position: absolute;
                width: @knobSize;
                height: @knobSize;
                border: @knobBorderSize solid @knobBorderColor;
                .border-radius(@knobSize);
                .box-sizing(border-box);
            }
        }
    }

    &.right,
    &.left {
        height: @knobSize;

        .plat-range-container {
            top: 50%;
            left: @knobRadius;
            height: @rangeThickness;

            .slider {
                width: 0;
                height: 100%;

                .knob {
                    top: -@knobRadius;
                }
            }

            &.plat-transition {
                .transition(@rangeHorizontalTransition);
            }
        }
    }

    &.right {
        .plat-range-container {
            .slider {
                left: 0;

                .knob {
                    right: -@knobRadius;
                }
            }
        }
    }

    &.left {
        .plat-range-container {
            .slider {
                right: 0;

                .knob {
                    left: -@knobRadius;
                }
            }
        }
    }

    &.up,
    &.down {
        width: @knobSize;

        .plat-range-container {
            left: 50%;
            top: @knobRadius;
            width: @rangeThickness;

            .slider {
                width: 100%;
                height: 0;

                .knob {
                    left: -@knobRadius;
                }
            }

            &.plat-transition {
                .transition(@rangeVerticalTransition);
            }
        }
    }

    &.down {
        .plat-range-container {
            .slider {
                top: 0;

                .knob {
                    bottom: -@knobRadius;
                }
            }
        }
    }

    &.up {
        .plat-range-container {
            .slider {
                bottom: 0;

                .knob {
                    top: -@knobRadius;
                }
            }
        }
    }

    &.primary {
        .plat-range-container {
            .slider {
                .knob {
                    background-color: @knobPrimaryColor;
                }
            }
        }
    }

    &.secondary {
        .plat-range-container {
            .slider {
                .knob {
                    background-color: @knobSecondaryColor;
                }
            }
        }
    }
}

@import '../less/platypus';

